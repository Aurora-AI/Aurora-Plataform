services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  chromadb:
    build:
      context: ./chromadb # <-- Aponta para a pasta com o Dockerfile do ChromaDB
    container_name: chromadb
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  aurora-core:
    build:
      context: . # <-- Aponta para a raiz, usando o Dockerfile principal
    container_name: aurora-core
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy

volumes:
  redis_data:
  chroma_data:
